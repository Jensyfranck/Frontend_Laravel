version: "3.8"

services:

  # Database
  database:
    image: container-registry.oracle.com/mysql/community-server:8.4
    environment: # Variables defined in .env
      MYSQL_DATABASE: Hackathon_Desiderius
      MYSQL_ROOT_PASSWORD: password
    restart: always # Check need
    ports: # Check need + port (if changed => also change in .env file)
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel_backend
    
  # Apache Service
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - 9000:81
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf 
      - /etc/nginx/snippets/fastcgi-php.confd:/etc/nginx/snippets/fastcgi-php.conf
    depends_on:
      - php
    networks:
      - laravel_backend

 # Apache Service
  webserver:
    image: nginx:latest
    restart: always
    ports:
      - 9999:80
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf #works
      - ./public:/usr/share/nginx/html
    networks:
      - laravel_backend
    
  # phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8888:80
    environment:
      PMA_HOST: database
      MYSQL_ROOT_PASSWORD: password
    depends_on:
      - database
    networks:
      - laravel_backend
  
  #PHP Service
  php:
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - CONTAINER_ROLE=app
    working_dir: /var/www
    restart: always
    volumes:
      - ./:/var/www
    ports:
      - 8000:9000
    expose:
      - 9000
    depends_on:
      - database
    networks:
      - laravel_backend

  
 #Websocket Service
  websocket:
    build:
      context: .
      target: php
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=websocket
    working_dir: /var/www
    restart: always
    volumes:
      - ./:/var/www
    ports:
     - 6001:6001
    depends_on:
      - database
    networks:
      - laravel_backend

  #Node Service
  #node:
   # build:
    #  context: .
     # target: node
    #volumes:
    #  - ./:/usr/src
    #  - ./node_modules:/usr/src/node_modules
    #tty: true

  # Heartbeat Service 
  heartbeat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always


volumes:
  mysql-data: 

networks:
  laravel_backend:
    driver: bridge